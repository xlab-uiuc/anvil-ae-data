+ source /conf/env.sh
++ DOMAIN=test-cluster-headless.zookeeper.svc.cluster.local
++ QUORUM_PORT=2888
++ LEADER_PORT=3888
++ CLIENT_HOST=test-cluster-client
++ CLIENT_PORT=2181
++ ADMIN_SERVER_HOST=test-cluster-admin-server
++ ADMIN_SERVER_PORT=8080
++ CLUSTER_NAME=test-cluster
+ source /usr/local/bin/zookeeperFunctions.sh
++ set -ex
++ hostname -s
+ HOST=test-cluster-1
+ DATA_DIR=/data
+ MYID_FILE=/data/myid
+ LOG4J_CONF=/conf/log4j-quiet.properties
+ DYNCONFIG=/data/zoo.cfg.dynamic
+ STATIC_CONFIG=/data/conf/zoo.cfg
+ [[ test-cluster-1 =~ (.*)-([0-9]+)$ ]]
+ NAME=test-cluster
+ ORD=1
+ MYID=2
+ WRITE_CONFIGURATION=true
+ REGISTER_NODE=true
+ ONDISK_MYID_CONFIG=false
+ ONDISK_DYN_CONFIG=false
+ '[' -f /data/myid ']'
++ cat /data/myid
+ EXISTING_ID=2
+ [[ 2 == \2 ]]
+ [[ -f /data/conf/zoo.cfg ]]
+ ONDISK_MYID_CONFIG=true
+ '[' -f /data/zoo.cfg.dynamic ']'
+ set +e
+ [[ -n '' ]]
+ set -e
+ set +e
+ getent hosts test-cluster-headless.zookeeper.svc.cluster.local
+ [[ 2 -eq 0 ]]
+ nslookup test-cluster-headless.zookeeper.svc.cluster.local
+ grep -q 'server can'\''t find test-cluster-headless.zookeeper.svc.cluster.local'
+ echo 'there is no active ensemble'
+ ACTIVE_ENSEMBLE=false
there is no active ensemble
+ [[ true == true ]]
+ [[ false == true ]]
+ WRITE_CONFIGURATION=true
+ [[ false == false ]]
+ REGISTER_NODE=false
+ [[ true == true ]]
Writing myid: 2 to: /data/myid.
+ echo 'Writing myid: 2 to: /data/myid.'
+ echo 2
+ [[ 2 -eq 1 ]]
+ [[ false == true ]]
+ ZOOCFGDIR=/data/conf
+ export ZOOCFGDIR
+ echo Copying /conf contents to writable directory, to support Zookeeper dynamic reconfiguration
Copying /conf contents to writable directory, to support Zookeeper dynamic reconfiguration
+ [[ ! -d /data/conf ]]
+ echo Copying the /conf/zoo.cfg contents except the dynamic config file during restart
Copying the /conf/zoo.cfg contents except the dynamic config file during restart
++ head -n -1 /conf/zoo.cfg
++ tail -n 1 /data/conf/zoo.cfg
+ echo -e '4lw.commands.whitelist=cons, envi, conf, crst, srvr, stat, mntr, ruok
dataDir=/data
standaloneEnabled=false
reconfigEnabled=true
skipACL=yes
metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider
metricsProvider.httpPort=7000
metricsProvider.exportJvmInfo=true
initLimit=10
syncLimit=2
tickTime=2000
globalOutstandingLimit=1000
preAllocSize=65536
snapCount=10000
commitLogCount=500
snapSizeLimitInKb=4194304
maxCnxns=1
maxClientCnxns=60
minSessionTimeout=4000
maxSessionTimeout=40000
autopurge.snapRetainCount=5
autopurge.purgeInterval=1
quorumListenOnAllIPs=false
admin.serverPort=8080\ndynamicConfigFile=/data/zoo.cfg.dynamic'
+ cp -f /conf/log4j.properties /data/conf
+ cp -f /conf/log4j-quiet.properties /data/conf
+ cp -f /conf/env.sh /data/conf
+ '[' -f /data/zoo.cfg.dynamic ']'
+ echo 'Node failed to register!'
+ exit 1
Node failed to register!
