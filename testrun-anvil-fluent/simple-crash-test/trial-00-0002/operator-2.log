Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster failed with error: ApiError: DaemonSet.apps "test-cluster" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: "ACTOKEY": supported values: "File", "FallbackToLogsOnError", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc0101183b0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]: Invalid (ErrorResponse { status: "Failure", message: "DaemonSet.apps \"test-cluster\" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: \"ACTOKEY\": supported values: \"File\", \"FallbackToLogsOnError\", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: \"ACTOKEY\": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: \"\": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: \"\": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: \"ACTOKEY\", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: \"ACTOKEY\": supported values: \"Always\", \"IfNotPresent\", \"Never\", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: \"ACTOKEY\": supported values: \"Localhost\", \"RuntimeDefault\", \"Unconfined\", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:\"ACTOKEY\", LocalhostProfile:(*string)(0xc0101183b0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]", reason: "Invalid", code: 422 })
Reconciling FluentBit/fluent/test-cluster: error
reconcile failed: reconciler for object FluentBit.v1.anvil.dev/test-cluster.fluent failed
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBitConfig","metadata":{"creationTimestamp":"2023-12-02T02:32:56Z","generation":1,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:fluentBitConfig":{},"f:parsersConfig":{}}},"manager":"kubectl","operation":"Apply","time":"2023-12-02T02:32:56Z"}],"name":"fluent-bit-config","namespace":"fluent","resourceVersion":"644","uid":"1c6d38b6-4711-4de1-8e21-3171190bb965"},"spec":{"fluentBitConfig":"[Service]\n    Parsers_File    parsers.conf\n[Input]\n    Name    tail\n    Path    /var/log/containers/*.log\n    Exclude_Path    /var/log/containers/utils_default_utils-*.log\n    Refresh_Interval    10\n    Skip_Long_Lines    true\n    DB    /fluent-bit/tail/pos.db\n    DB.Sync    Normal\n    Mem_Buf_Limit    5MB\n    Parser    docker\n    Tag    kube.*\n[Filter]\n    Name    kubernetes\n    Match    kube.*\n    Kube_URL    https://kubernetes.default.svc:443\n    Kube_CA_File    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    Kube_Token_File    /var/run/secrets/kubernetes.io/serviceaccount/token\n    Labels    false\n    Annotations    false\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    lift\n    Nested_under    kubernetes\n    Add_prefix    kubernetes_\n[Filter]\n    Name    modify\n    Match    kube.*\n    Remove    stream\n    Remove    kubernetes_pod_id\n    Remove    kubernetes_host\n    Remove    kubernetes_container_hash\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    nest\n    Wildcard    kubernetes_*\n    Nest_under    kubernetes\n    Remove_prefix    kubernetes_\n[Output]\n    Name    kafka\n    Match_Regex    (?:kube|service)\\.(.*)\n    Brokers    my-cluster-kafka-brokers.kafka.svc:9092\n    Topics    fluent-log\n","parsersConfig":""}}
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: Update Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: done
reconciled (ObjectRef { dyntype: (), name: "fluent-bit-config", namespace: Some("fluent"), extra: Extra { resource_version: Some("644"), uid: Some("1c6d38b6-4711-4de1-8e21-3171190bb965") } }, Action { requeue_after: Some(60s) })
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"initContainers\":[{\"args\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"env\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\",\"valueFrom\":{\"configMapKeyRef\":null,\"fieldRef\":{\"apiVersion\":\"ACTOKEY\",\"fieldPath\":\"ACTOKEY\"},\"resourceFieldRef\":null,\"secretKeyRef\":{\"key\":\"ACTOKEY\",\"name\":\"ACTOKEY\",\"optional\":true}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":null}],\"image\":\"ACTOKEY\",\"imagePullPolicy\":\"ACTOKEY\",\"lifecycle\":{\"postStart\":null,\"preStop\":{\"exec\":{\"command\":[]},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":null,\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"}}},\"livenessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":5,\"grpc\":{\"port\":4,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":3,\"periodSeconds\":4,\"successThreshold\":3,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":0},\"name\":\"k2r4\",\"ports\":[{\"containerPort\":5,\"hostIP\":\"ACTOKEY\",\"hostPort\":3,\"name\":null,\"protocol\":\"ACTOKEY\"},{\"containerPort\":2,\"hostIP\":\"ACTOKEY\",\"hostPort\":4,\"name\":\"ACTOKEY\",\"protocol\":\"ACTOKEY\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":3,\"grpc\":{\"port\":2,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":5,\"periodSeconds\":3,\"successThreshold\":5,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"1000m\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"1000m\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"ACTOKEY\",\"ACTOKEY\"],\"drop\":[]},\"privileged\":false,\"procMount\":\"ACTOKEY\",\"readOnlyRootFilesystem\":true,\"runAsGroup\":2,\"runAsNonRoot\":false,\"runAsUser\":3,\"seLinuxOptions\":{\"level\":\"ACTOKEY\",\"role\":\"ACTOKEY\",\"type\":\"ACTOKEY\",\"user\":null},\"seccompProfile\":{\"localhostProfile\":\"ACTOKEY\",\"type\":\"ACTOKEY\"},\"windowsOptions\":{\"gmsaCredentialSpec\":\"ACTOKEY\",\"gmsaCredentialSpecName\":\"ACTOKEY\",\"hostProcess\":false,\"runAsUserName\":\"ACTOKEY\"}},\"startupProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":2,\"grpc\":null,\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":null,\"periodSeconds\":2,\"successThreshold\":null,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":4,\"timeoutSeconds\":1},\"stdin\":true,\"stdinOnce\":true,\"terminationMessagePath\":\"ACTOKEY\",\"terminationMessagePolicy\":\"ACTOKEY\",\"tty\":false,\"volumeDevices\":[{\"devicePath\":\"ACTOKEY\",\"name\":\"ACTOKEY\"}],\"volumeMounts\":[],\"workingDir\":null}],\"resources\":{\"limits\":{}},\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-02T02:33:27Z","generation":3,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:initContainers":{},"f:labels":{},"f:nodeSelector":{},"f:resources":{".":{},"f:limits":{}},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-02T02:35:00Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"942","uid":"2fa3f097-980c-4eed-adfc-02d84fbf2f03"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":{"limits":{}},"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":null,"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":[{"args":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"env":[{"name":"ACTOKEY","value":"ACTOKEY","valueFrom":{"fieldRef":{"apiVersion":"ACTOKEY","fieldPath":"ACTOKEY"},"secretKeyRef":{"key":"ACTOKEY","name":"ACTOKEY","optional":true}}}],"envFrom":[{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY"}],"image":"ACTOKEY","imagePullPolicy":"ACTOKEY","lifecycle":{"preStop":{"exec":{"command":[]},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"port":"ACTOKEY","scheme":"ACTOKEY"},"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"}}},"livenessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":5,"grpc":{"port":4,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":3,"periodSeconds":4,"successThreshold":3,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":0},"name":"k2r4","ports":[{"containerPort":5,"hostIP":"ACTOKEY","hostPort":3,"protocol":"ACTOKEY"},{"containerPort":2,"hostIP":"ACTOKEY","hostPort":4,"name":"ACTOKEY","protocol":"ACTOKEY"}],"readinessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY"]},"failureThreshold":3,"grpc":{"port":2,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":5,"periodSeconds":3,"successThreshold":5,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"800m","memory":"1000m"},"requests":{"cpu":"800m","memory":"1000m"}},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["ACTOKEY","ACTOKEY"],"drop":[]},"privileged":false,"procMount":"ACTOKEY","readOnlyRootFilesystem":true,"runAsGroup":2,"runAsNonRoot":false,"runAsUser":3,"seLinuxOptions":{"level":"ACTOKEY","role":"ACTOKEY","type":"ACTOKEY"},"seccompProfile":{"localhostProfile":"ACTOKEY","type":"ACTOKEY"},"windowsOptions":{"gmsaCredentialSpec":"ACTOKEY","gmsaCredentialSpecName":"ACTOKEY","hostProcess":false,"runAsUserName":"ACTOKEY"}},"startupProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":2,"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"periodSeconds":2,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":4,"timeoutSeconds":1},"stdin":true,"stdinOnce":true,"terminationMessagePath":"ACTOKEY","terminationMessagePolicy":"ACTOKEY","tty":false,"volumeDevices":[{"devicePath":"ACTOKEY","name":"ACTOKEY"}],"volumeMounts":[]}],"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster failed with error: ApiError: DaemonSet.apps "test-cluster" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: "ACTOKEY": supported values: "File", "FallbackToLogsOnError", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc01105be40)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]: Invalid (ErrorResponse { status: "Failure", message: "DaemonSet.apps \"test-cluster\" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: \"ACTOKEY\": supported values: \"File\", \"FallbackToLogsOnError\", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: \"ACTOKEY\": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: \"\": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: \"\": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: \"ACTOKEY\", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: \"ACTOKEY\": supported values: \"Always\", \"IfNotPresent\", \"Never\", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: \"ACTOKEY\": supported values: \"Localhost\", \"RuntimeDefault\", \"Unconfined\", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:\"ACTOKEY\", LocalhostProfile:(*string)(0xc01105be40)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]", reason: "Invalid", code: 422 })
Reconciling FluentBit/fluent/test-cluster: error
reconcile failed: reconciler for object FluentBit.v1.anvil.dev/test-cluster.fluent failed
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"initContainers\":[{\"args\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"env\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\",\"valueFrom\":{\"configMapKeyRef\":null,\"fieldRef\":{\"apiVersion\":\"ACTOKEY\",\"fieldPath\":\"ACTOKEY\"},\"resourceFieldRef\":null,\"secretKeyRef\":{\"key\":\"ACTOKEY\",\"name\":\"ACTOKEY\",\"optional\":true}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":null}],\"image\":\"ACTOKEY\",\"imagePullPolicy\":\"ACTOKEY\",\"lifecycle\":{\"postStart\":null,\"preStop\":{\"exec\":{\"command\":[]},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":null,\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"}}},\"livenessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":5,\"grpc\":{\"port\":4,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":3,\"periodSeconds\":4,\"successThreshold\":3,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":0},\"name\":\"k2r4\",\"ports\":[{\"containerPort\":5,\"hostIP\":\"ACTOKEY\",\"hostPort\":3,\"name\":null,\"protocol\":\"ACTOKEY\"},{\"containerPort\":2,\"hostIP\":\"ACTOKEY\",\"hostPort\":4,\"name\":\"ACTOKEY\",\"protocol\":\"ACTOKEY\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":3,\"grpc\":{\"port\":2,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":5,\"periodSeconds\":3,\"successThreshold\":5,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"1000m\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"1000m\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"ACTOKEY\",\"ACTOKEY\"],\"drop\":[]},\"privileged\":false,\"procMount\":\"ACTOKEY\",\"readOnlyRootFilesystem\":true,\"runAsGroup\":2,\"runAsNonRoot\":false,\"runAsUser\":3,\"seLinuxOptions\":{\"level\":\"ACTOKEY\",\"role\":\"ACTOKEY\",\"type\":\"ACTOKEY\",\"user\":null},\"seccompProfile\":{\"localhostProfile\":\"ACTOKEY\",\"type\":\"ACTOKEY\"},\"windowsOptions\":{\"gmsaCredentialSpec\":\"ACTOKEY\",\"gmsaCredentialSpecName\":\"ACTOKEY\",\"hostProcess\":false,\"runAsUserName\":\"ACTOKEY\"}},\"startupProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":2,\"grpc\":null,\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":null,\"periodSeconds\":2,\"successThreshold\":null,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":4,\"timeoutSeconds\":1},\"stdin\":true,\"stdinOnce\":true,\"terminationMessagePath\":\"ACTOKEY\",\"terminationMessagePolicy\":\"ACTOKEY\",\"tty\":false,\"volumeDevices\":[{\"devicePath\":\"ACTOKEY\",\"name\":\"ACTOKEY\"}],\"volumeMounts\":[],\"workingDir\":null}],\"resources\":{\"limits\":{}},\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-02T02:33:27Z","generation":3,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:initContainers":{},"f:labels":{},"f:nodeSelector":{},"f:resources":{".":{},"f:limits":{}},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-02T02:35:00Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"942","uid":"2fa3f097-980c-4eed-adfc-02d84fbf2f03"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":{"limits":{}},"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":null,"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":[{"args":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"env":[{"name":"ACTOKEY","value":"ACTOKEY","valueFrom":{"fieldRef":{"apiVersion":"ACTOKEY","fieldPath":"ACTOKEY"},"secretKeyRef":{"key":"ACTOKEY","name":"ACTOKEY","optional":true}}}],"envFrom":[{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY"}],"image":"ACTOKEY","imagePullPolicy":"ACTOKEY","lifecycle":{"preStop":{"exec":{"command":[]},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"port":"ACTOKEY","scheme":"ACTOKEY"},"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"}}},"livenessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":5,"grpc":{"port":4,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":3,"periodSeconds":4,"successThreshold":3,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":0},"name":"k2r4","ports":[{"containerPort":5,"hostIP":"ACTOKEY","hostPort":3,"protocol":"ACTOKEY"},{"containerPort":2,"hostIP":"ACTOKEY","hostPort":4,"name":"ACTOKEY","protocol":"ACTOKEY"}],"readinessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY"]},"failureThreshold":3,"grpc":{"port":2,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":5,"periodSeconds":3,"successThreshold":5,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"800m","memory":"1000m"},"requests":{"cpu":"800m","memory":"1000m"}},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["ACTOKEY","ACTOKEY"],"drop":[]},"privileged":false,"procMount":"ACTOKEY","readOnlyRootFilesystem":true,"runAsGroup":2,"runAsNonRoot":false,"runAsUser":3,"seLinuxOptions":{"level":"ACTOKEY","role":"ACTOKEY","type":"ACTOKEY"},"seccompProfile":{"localhostProfile":"ACTOKEY","type":"ACTOKEY"},"windowsOptions":{"gmsaCredentialSpec":"ACTOKEY","gmsaCredentialSpecName":"ACTOKEY","hostProcess":false,"runAsUserName":"ACTOKEY"}},"startupProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":2,"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"periodSeconds":2,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":4,"timeoutSeconds":1},"stdin":true,"stdinOnce":true,"terminationMessagePath":"ACTOKEY","terminationMessagePolicy":"ACTOKEY","tty":false,"volumeDevices":[{"devicePath":"ACTOKEY","name":"ACTOKEY"}],"volumeMounts":[]}],"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster failed with error: ApiError: DaemonSet.apps "test-cluster" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: "ACTOKEY": supported values: "File", "FallbackToLogsOnError", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc011e96470)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]: Invalid (ErrorResponse { status: "Failure", message: "DaemonSet.apps \"test-cluster\" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: \"ACTOKEY\": supported values: \"File\", \"FallbackToLogsOnError\", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: \"ACTOKEY\": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: \"\": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: \"\": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: \"ACTOKEY\", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: \"ACTOKEY\": supported values: \"Always\", \"IfNotPresent\", \"Never\", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: \"ACTOKEY\": supported values: \"Localhost\", \"RuntimeDefault\", \"Unconfined\", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:\"ACTOKEY\", LocalhostProfile:(*string)(0xc011e96470)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]", reason: "Invalid", code: 422 })
Reconciling FluentBit/fluent/test-cluster: error
reconcile failed: reconciler for object FluentBit.v1.anvil.dev/test-cluster.fluent failed
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"initContainers\":[{\"args\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"env\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\",\"valueFrom\":{\"configMapKeyRef\":null,\"fieldRef\":{\"apiVersion\":\"ACTOKEY\",\"fieldPath\":\"ACTOKEY\"},\"resourceFieldRef\":null,\"secretKeyRef\":{\"key\":\"ACTOKEY\",\"name\":\"ACTOKEY\",\"optional\":true}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":null}],\"image\":\"ACTOKEY\",\"imagePullPolicy\":\"ACTOKEY\",\"lifecycle\":{\"postStart\":null,\"preStop\":{\"exec\":{\"command\":[]},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":null,\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"}}},\"livenessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":5,\"grpc\":{\"port\":4,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":3,\"periodSeconds\":4,\"successThreshold\":3,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":0},\"name\":\"k2r4\",\"ports\":[{\"containerPort\":5,\"hostIP\":\"ACTOKEY\",\"hostPort\":3,\"name\":null,\"protocol\":\"ACTOKEY\"},{\"containerPort\":2,\"hostIP\":\"ACTOKEY\",\"hostPort\":4,\"name\":\"ACTOKEY\",\"protocol\":\"ACTOKEY\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":3,\"grpc\":{\"port\":2,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":5,\"periodSeconds\":3,\"successThreshold\":5,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"1000m\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"1000m\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"ACTOKEY\",\"ACTOKEY\"],\"drop\":[]},\"privileged\":false,\"procMount\":\"ACTOKEY\",\"readOnlyRootFilesystem\":true,\"runAsGroup\":2,\"runAsNonRoot\":false,\"runAsUser\":3,\"seLinuxOptions\":{\"level\":\"ACTOKEY\",\"role\":\"ACTOKEY\",\"type\":\"ACTOKEY\",\"user\":null},\"seccompProfile\":{\"localhostProfile\":\"ACTOKEY\",\"type\":\"ACTOKEY\"},\"windowsOptions\":{\"gmsaCredentialSpec\":\"ACTOKEY\",\"gmsaCredentialSpecName\":\"ACTOKEY\",\"hostProcess\":false,\"runAsUserName\":\"ACTOKEY\"}},\"startupProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":2,\"grpc\":null,\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":null,\"periodSeconds\":2,\"successThreshold\":null,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":4,\"timeoutSeconds\":1},\"stdin\":true,\"stdinOnce\":true,\"terminationMessagePath\":\"ACTOKEY\",\"terminationMessagePolicy\":\"ACTOKEY\",\"tty\":false,\"volumeDevices\":[{\"devicePath\":\"ACTOKEY\",\"name\":\"ACTOKEY\"}],\"volumeMounts\":[],\"workingDir\":null}],\"resources\":{\"limits\":{}},\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-02T02:33:27Z","generation":3,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:initContainers":{},"f:labels":{},"f:nodeSelector":{},"f:resources":{".":{},"f:limits":{}},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-02T02:35:00Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"942","uid":"2fa3f097-980c-4eed-adfc-02d84fbf2f03"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":{"limits":{}},"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":null,"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":[{"args":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"env":[{"name":"ACTOKEY","value":"ACTOKEY","valueFrom":{"fieldRef":{"apiVersion":"ACTOKEY","fieldPath":"ACTOKEY"},"secretKeyRef":{"key":"ACTOKEY","name":"ACTOKEY","optional":true}}}],"envFrom":[{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY"}],"image":"ACTOKEY","imagePullPolicy":"ACTOKEY","lifecycle":{"preStop":{"exec":{"command":[]},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"port":"ACTOKEY","scheme":"ACTOKEY"},"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"}}},"livenessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":5,"grpc":{"port":4,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":3,"periodSeconds":4,"successThreshold":3,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":0},"name":"k2r4","ports":[{"containerPort":5,"hostIP":"ACTOKEY","hostPort":3,"protocol":"ACTOKEY"},{"containerPort":2,"hostIP":"ACTOKEY","hostPort":4,"name":"ACTOKEY","protocol":"ACTOKEY"}],"readinessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY"]},"failureThreshold":3,"grpc":{"port":2,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":5,"periodSeconds":3,"successThreshold":5,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"800m","memory":"1000m"},"requests":{"cpu":"800m","memory":"1000m"}},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["ACTOKEY","ACTOKEY"],"drop":[]},"privileged":false,"procMount":"ACTOKEY","readOnlyRootFilesystem":true,"runAsGroup":2,"runAsNonRoot":false,"runAsUser":3,"seLinuxOptions":{"level":"ACTOKEY","role":"ACTOKEY","type":"ACTOKEY"},"seccompProfile":{"localhostProfile":"ACTOKEY","type":"ACTOKEY"},"windowsOptions":{"gmsaCredentialSpec":"ACTOKEY","gmsaCredentialSpecName":"ACTOKEY","hostProcess":false,"runAsUserName":"ACTOKEY"}},"startupProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":2,"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"periodSeconds":2,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":4,"timeoutSeconds":1},"stdin":true,"stdinOnce":true,"terminationMessagePath":"ACTOKEY","terminationMessagePolicy":"ACTOKEY","tty":false,"volumeDevices":[{"devicePath":"ACTOKEY","name":"ACTOKEY"}],"volumeMounts":[]}],"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster failed with error: ApiError: DaemonSet.apps "test-cluster" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: "ACTOKEY": supported values: "File", "FallbackToLogsOnError", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00d27e3e0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]: Invalid (ErrorResponse { status: "Failure", message: "DaemonSet.apps \"test-cluster\" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: \"ACTOKEY\": supported values: \"File\", \"FallbackToLogsOnError\", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: \"ACTOKEY\": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: \"\": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: \"\": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: \"ACTOKEY\", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: \"ACTOKEY\": supported values: \"Always\", \"IfNotPresent\", \"Never\", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: \"ACTOKEY\": supported values: \"Localhost\", \"RuntimeDefault\", \"Unconfined\", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:\"ACTOKEY\", LocalhostProfile:(*string)(0xc00d27e3e0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]", reason: "Invalid", code: 422 })
Reconciling FluentBit/fluent/test-cluster: error
reconcile failed: reconciler for object FluentBit.v1.anvil.dev/test-cluster.fluent failed
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"initContainers\":[{\"args\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"],\"env\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\",\"valueFrom\":{\"configMapKeyRef\":null,\"fieldRef\":{\"apiVersion\":\"ACTOKEY\",\"fieldPath\":\"ACTOKEY\"},\"resourceFieldRef\":null,\"secretKeyRef\":{\"key\":\"ACTOKEY\",\"name\":\"ACTOKEY\",\"optional\":true}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":{\"name\":\"ACTOKEY\",\"optional\":false}},{\"configMapRef\":{\"name\":\"ACTOKEY\",\"optional\":false},\"prefix\":\"ACTOKEY\",\"secretRef\":null}],\"image\":\"ACTOKEY\",\"imagePullPolicy\":\"ACTOKEY\",\"lifecycle\":{\"postStart\":null,\"preStop\":{\"exec\":{\"command\":[]},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":null,\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"}}},\"livenessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":5,\"grpc\":{\"port\":4,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":3,\"periodSeconds\":4,\"successThreshold\":3,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":0},\"name\":\"k2r4\",\"ports\":[{\"containerPort\":5,\"hostIP\":\"ACTOKEY\",\"hostPort\":3,\"name\":null,\"protocol\":\"ACTOKEY\"},{\"containerPort\":2,\"hostIP\":\"ACTOKEY\",\"hostPort\":4,\"name\":\"ACTOKEY\",\"protocol\":\"ACTOKEY\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":3,\"grpc\":{\"port\":2,\"service\":\"ACTOKEY\"},\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":5,\"periodSeconds\":3,\"successThreshold\":5,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"1000m\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"1000m\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"ACTOKEY\",\"ACTOKEY\"],\"drop\":[]},\"privileged\":false,\"procMount\":\"ACTOKEY\",\"readOnlyRootFilesystem\":true,\"runAsGroup\":2,\"runAsNonRoot\":false,\"runAsUser\":3,\"seLinuxOptions\":{\"level\":\"ACTOKEY\",\"role\":\"ACTOKEY\",\"type\":\"ACTOKEY\",\"user\":null},\"seccompProfile\":{\"localhostProfile\":\"ACTOKEY\",\"type\":\"ACTOKEY\"},\"windowsOptions\":{\"gmsaCredentialSpec\":\"ACTOKEY\",\"gmsaCredentialSpecName\":\"ACTOKEY\",\"hostProcess\":false,\"runAsUserName\":\"ACTOKEY\"}},\"startupProbe\":{\"exec\":{\"command\":[\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\",\"ACTOKEY\"]},\"failureThreshold\":2,\"grpc\":null,\"httpGet\":{\"host\":\"ACTOKEY\",\"httpHeaders\":[{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"},{\"name\":\"ACTOKEY\",\"value\":\"ACTOKEY\"}],\"path\":\"ACTOKEY\",\"port\":\"ACTOKEY\",\"scheme\":\"ACTOKEY\"},\"initialDelaySeconds\":null,\"periodSeconds\":2,\"successThreshold\":null,\"tcpSocket\":{\"host\":\"ACTOKEY\",\"port\":\"ACTOKEY\"},\"terminationGracePeriodSeconds\":4,\"timeoutSeconds\":1},\"stdin\":true,\"stdinOnce\":true,\"terminationMessagePath\":\"ACTOKEY\",\"terminationMessagePolicy\":\"ACTOKEY\",\"tty\":false,\"volumeDevices\":[{\"devicePath\":\"ACTOKEY\",\"name\":\"ACTOKEY\"}],\"volumeMounts\":[],\"workingDir\":null}],\"resources\":{\"limits\":{}},\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-02T02:33:27Z","generation":3,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:initContainers":{},"f:labels":{},"f:nodeSelector":{},"f:resources":{".":{},"f:limits":{}},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-02T02:35:00Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"942","uid":"2fa3f097-980c-4eed-adfc-02d84fbf2f03"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":{"limits":{}},"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":null,"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":[{"args":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"],"env":[{"name":"ACTOKEY","value":"ACTOKEY","valueFrom":{"fieldRef":{"apiVersion":"ACTOKEY","fieldPath":"ACTOKEY"},"secretKeyRef":{"key":"ACTOKEY","name":"ACTOKEY","optional":true}}}],"envFrom":[{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY","secretRef":{"name":"ACTOKEY","optional":false}},{"configMapRef":{"name":"ACTOKEY","optional":false},"prefix":"ACTOKEY"}],"image":"ACTOKEY","imagePullPolicy":"ACTOKEY","lifecycle":{"preStop":{"exec":{"command":[]},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"port":"ACTOKEY","scheme":"ACTOKEY"},"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"}}},"livenessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":5,"grpc":{"port":4,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":3,"periodSeconds":4,"successThreshold":3,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":0},"name":"k2r4","ports":[{"containerPort":5,"hostIP":"ACTOKEY","hostPort":3,"protocol":"ACTOKEY"},{"containerPort":2,"hostIP":"ACTOKEY","hostPort":4,"name":"ACTOKEY","protocol":"ACTOKEY"}],"readinessProbe":{"exec":{"command":["ACTOKEY","ACTOKEY"]},"failureThreshold":3,"grpc":{"port":2,"service":"ACTOKEY"},"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"initialDelaySeconds":5,"periodSeconds":3,"successThreshold":5,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"800m","memory":"1000m"},"requests":{"cpu":"800m","memory":"1000m"}},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["ACTOKEY","ACTOKEY"],"drop":[]},"privileged":false,"procMount":"ACTOKEY","readOnlyRootFilesystem":true,"runAsGroup":2,"runAsNonRoot":false,"runAsUser":3,"seLinuxOptions":{"level":"ACTOKEY","role":"ACTOKEY","type":"ACTOKEY"},"seccompProfile":{"localhostProfile":"ACTOKEY","type":"ACTOKEY"},"windowsOptions":{"gmsaCredentialSpec":"ACTOKEY","gmsaCredentialSpecName":"ACTOKEY","hostProcess":false,"runAsUserName":"ACTOKEY"}},"startupProbe":{"exec":{"command":["ACTOKEY","ACTOKEY","ACTOKEY","ACTOKEY"]},"failureThreshold":2,"httpGet":{"host":"ACTOKEY","httpHeaders":[{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"},{"name":"ACTOKEY","value":"ACTOKEY"}],"path":"ACTOKEY","port":"ACTOKEY","scheme":"ACTOKEY"},"periodSeconds":2,"tcpSocket":{"host":"ACTOKEY","port":"ACTOKEY"},"terminationGracePeriodSeconds":4,"timeoutSeconds":1},"stdin":true,"stdinOnce":true,"terminationMessagePath":"ACTOKEY","terminationMessagePolicy":"ACTOKEY","tty":false,"volumeDevices":[{"devicePath":"ACTOKEY","name":"ACTOKEY"}],"volumeMounts":[]}],"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster failed with error: ApiError: DaemonSet.apps "test-cluster" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: "ACTOKEY": supported values: "File", "FallbackToLogsOnError", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: "ACTOKEY": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: "ACTOKEY": supported values: "SCTP", "TCP", "UDP", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: "ACTOKEY": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: "": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: "": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: "ACTOKEY", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: "ACTOKEY": supported values: "Always", "IfNotPresent", "Never", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: "ACTOKEY": supported values: "Localhost", "RuntimeDefault", "Unconfined", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:"ACTOKEY", LocalhostProfile:(*string)(0xc00fabf7c0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: "ACTOKEY": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]: Invalid (ErrorResponse { status: "Failure", message: "DaemonSet.apps \"test-cluster\" is invalid: [spec.template.spec.initContainers[0].terminationMessagePolicy: Unsupported value: \"ACTOKEY\": supported values: \"File\", \"FallbackToLogsOnError\", spec.template.spec.initContainers[0].ports[0].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain only alpha-numeric characters (a-z, 0-9), and hyphens (-), spec.template.spec.initContainers[0].ports[1].name: Invalid value: \"ACTOKEY\": must contain at least one letter (a-z), spec.template.spec.initContainers[0].ports[1].protocol: Unsupported value: \"ACTOKEY\": supported values: \"SCTP\", \"TCP\", \"UDP\", spec.template.spec.initContainers[0].env[0].valueFrom.fieldRef.fieldPath: Invalid value: \"ACTOKEY\": error converting fieldPath: unsupported pod version: ACTOKEY, spec.template.spec.initContainers[0].env[0].valueFrom.secretKeyRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].env[0].valueFrom: Invalid value: \"\": may not be specified when `value` is not empty, spec.template.spec.initContainers[0].envFrom[0].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[0].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom: Invalid value: \"\": may not have more than one field specified at a time, spec.template.spec.initContainers[0].envFrom[1].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[1].secretRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].envFrom[2].configMapRef.name: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].volumeDevices[0].name: Not found: \"ACTOKEY\", spec.template.spec.initContainers[0].imagePullPolicy: Unsupported value: \"ACTOKEY\": supported values: \"Always\", \"IfNotPresent\", \"Never\", spec.template.spec.initContainers[0].securityContext.seccompProfile.type: Unsupported value: \"ACTOKEY\": supported values: \"Localhost\", \"RuntimeDefault\", \"Unconfined\", spec.template.spec.initContainers[0].securityContext.seccompProfile.localhostProfile: Invalid value: core.SeccompProfile{Type:\"ACTOKEY\", LocalhostProfile:(*string)(0xc00fabf7c0)}: can only be set when seccomp type is Localhost, spec.template.spec.initContainers[0].securityContext.windowsOptions.gmsaCredentialSpecName: Invalid value: \"ACTOKEY\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'), spec.template.spec.initContainers[0].lifecycle: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].livenessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].readinessProbe: Forbidden: may not be set for init containers, spec.template.spec.initContainers[0].startupProbe: Forbidden: may not be set for init containers]", reason: "Invalid", code: 422 })
Reconciling FluentBit/fluent/test-cluster: error
reconcile failed: reconciler for object FluentBit.v1.anvil.dev/test-cluster.fluent failed

