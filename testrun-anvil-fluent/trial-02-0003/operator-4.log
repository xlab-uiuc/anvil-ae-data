Reconciling FluentBitConfig/fluent/fluent-bit-config: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: Update Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: done
reconciled (ObjectRef { dyntype: (), name: "fluent-bit-config", namespace: Some("fluent"), extra: Extra { resource_version: Some("646"), uid: Some("77404b7b-527f-4aa8-81d8-82230352659c") } }, Action { requeue_after: Some(60s) })
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-01T22:17:10Z","generation":3,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:labels":{},"f:nodeSelector":{},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-01T22:19:14Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"988","uid":"dbd83216-0ae0-4993-80bf-683417e80999"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":null,"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":null,"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":null,"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Update Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Update RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Update DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: done
reconciled (ObjectRef { dyntype: (), name: "test-cluster", namespace: Some("fluent"), extra: Extra { resource_version: Some("731"), uid: Some("dbd83216-0ae0-4993-80bf-683417e80999") } }, Action { requeue_after: Some(60s) })

