running fluent-controller
starting controller
starting controller
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBitConfig","metadata":{"creationTimestamp":"2023-12-02T00:38:46Z","generation":1,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:fluentBitConfig":{},"f:parsersConfig":{}}},"manager":"kubectl","operation":"Apply","time":"2023-12-02T00:38:46Z"}],"name":"fluent-bit-config","namespace":"fluent","resourceVersion":"636","uid":"fc5c00de-971e-48f9-b0f5-9e65e1825ed8"},"spec":{"fluentBitConfig":"[Service]\n    Parsers_File    parsers.conf\n[Input]\n    Name    tail\n    Path    /var/log/containers/*.log\n    Exclude_Path    /var/log/containers/utils_default_utils-*.log\n    Refresh_Interval    10\n    Skip_Long_Lines    true\n    DB    /fluent-bit/tail/pos.db\n    DB.Sync    Normal\n    Mem_Buf_Limit    5MB\n    Parser    docker\n    Tag    kube.*\n[Filter]\n    Name    kubernetes\n    Match    kube.*\n    Kube_URL    https://kubernetes.default.svc:443\n    Kube_CA_File    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    Kube_Token_File    /var/run/secrets/kubernetes.io/serviceaccount/token\n    Labels    false\n    Annotations    false\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    lift\n    Nested_under    kubernetes\n    Add_prefix    kubernetes_\n[Filter]\n    Name    modify\n    Match    kube.*\n    Remove    stream\n    Remove    kubernetes_pod_id\n    Remove    kubernetes_host\n    Remove    kubernetes_container_hash\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    nest\n    Wildcard    kubernetes_*\n    Nest_under    kubernetes\n    Remove_prefix    kubernetes_\n[Output]\n    Name    kafka\n    Match_Regex    (?:kube|service)\\.(.*)\n    Brokers    my-cluster-kafka-brokers.kafka.svc:9092\n    Topics    fluent-log\n","parsersConfig":""}}
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: Update Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: done
reconciled (ObjectRef { dyntype: (), name: "fluent-bit-config", namespace: Some("fluent"), extra: Extra { resource_version: Some("636"), uid: Some("fc5c00de-971e-48f9-b0f5-9e65e1825ed8") } }, Action { requeue_after: Some(60s) })
Reconciling FluentBit/fluent/test-cluster: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBit","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"anvil.dev/v1\",\"kind\":\"FluentBit\",\"metadata\":{\"annotations\":{},\"name\":\"test-cluster\",\"namespace\":\"fluent\"},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"test-cluster\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"fluentBitConfigName\":\"fluent-bit-config\",\"image\":\"kubesphere/fluent-bit:v2.1.7\",\"tolerations\":[{\"operator\":\"Exists\"}]}}\n"},"creationTimestamp":"2023-12-02T00:39:17Z","generation":1,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:affinity":{".":{},"f:podAntiAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:annotations":{},"f:disableLogVolumes":{},"f:fluentBitConfigName":{},"f:image":{},"f:labels":{},"f:nodeSelector":{},"f:serviceAccountAnnotations":{},"f:serviceAnnotations":{},"f:serviceLabels":{},"f:tolerations":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-12-02T00:39:17Z"}],"name":"test-cluster","namespace":"fluent","resourceVersion":"721","uid":"235f2211-6b3e-4aea-b42e-6cd4a68933fa"},"spec":{"fluentBitConfigName":"fluent-bit-config","image":"kubesphere/fluent-bit:v2.1.7","args":null,"command":null,"imagePullPolicy":null,"imagePullSecrets":null,"resources":null,"tolerations":[{"operator":"Exists"}],"labels":{},"annotations":{},"serviceAccountAnnotations":{},"serviceLabels":{},"serviceSelector":null,"serviceAnnotations":{},"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app.kubernetes.io/name","operator":"In","values":["test-cluster"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"disableLogVolumes":false,"nodeSelector":{},"runtimeClassName":null,"dnsPolicy":null,"priorityClassName":null,"volumes":null,"volumeMounts":null,"schedulerName":null,"metricsPort":null,"internalMountPropagation":null,"positionDB":null,"containerLogRealPath":null,"securityContext":null,"containerSecurityContext":null,"hostNetwork":null,"envVars":null,"livenessProbe":null,"readinessProbe":null,"initContainers":null,"ports":null}}
Reconciling FluentBit/fluent/test-cluster: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBit/fluent/test-cluster: Get ServiceAccount/fluent/test-cluster failed with error: ApiError: serviceaccounts "test-cluster" not found: NotFound (ErrorResponse { status: "Failure", message: "serviceaccounts \"test-cluster\" not found", reason: "NotFound", code: 404 })
Reconciling FluentBit/fluent/test-cluster: Create ServiceAccount/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get Role/fluent/test-cluster-role failed with error: ApiError: roles.rbac.authorization.k8s.io "test-cluster-role" not found: NotFound (ErrorResponse { status: "Failure", message: "roles.rbac.authorization.k8s.io \"test-cluster-role\" not found", reason: "NotFound", code: 404 })
Reconciling FluentBit/fluent/test-cluster: Create Role/fluent/test-cluster-role done
Reconciling FluentBit/fluent/test-cluster: Get RoleBinding/fluent/test-cluster-role-binding failed with error: ApiError: rolebindings.rbac.authorization.k8s.io "test-cluster-role-binding" not found: NotFound (ErrorResponse { status: "Failure", message: "rolebindings.rbac.authorization.k8s.io \"test-cluster-role-binding\" not found", reason: "NotFound", code: 404 })
Reconciling FluentBit/fluent/test-cluster: Create RoleBinding/fluent/test-cluster-role-binding done
Reconciling FluentBit/fluent/test-cluster: Get Service/fluent/test-cluster failed with error: ApiError: services "test-cluster" not found: NotFound (ErrorResponse { status: "Failure", message: "services \"test-cluster\" not found", reason: "NotFound", code: 404 })
Reconciling FluentBit/fluent/test-cluster: Create Service/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: Get DaemonSet/fluent/test-cluster failed with error: ApiError: daemonsets.apps "test-cluster" not found: NotFound (ErrorResponse { status: "Failure", message: "daemonsets.apps \"test-cluster\" not found", reason: "NotFound", code: 404 })
Reconciling FluentBit/fluent/test-cluster: Create DaemonSet/fluent/test-cluster done
Reconciling FluentBit/fluent/test-cluster: done
reconciled (ObjectRef { dyntype: (), name: "test-cluster", namespace: Some("fluent"), extra: Extra { resource_version: Some("721"), uid: Some("235f2211-6b3e-4aea-b42e-6cd4a68933fa") } }, Action { requeue_after: Some(60s) })
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get cr {"apiVersion":"anvil.dev/v1","kind":"FluentBitConfig","metadata":{"creationTimestamp":"2023-12-02T00:38:46Z","generation":1,"managedFields":[{"apiVersion":"anvil.dev/v1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:fluentBitConfig":{},"f:parsersConfig":{}}},"manager":"kubectl","operation":"Apply","time":"2023-12-02T00:38:46Z"}],"name":"fluent-bit-config","namespace":"fluent","resourceVersion":"636","uid":"fc5c00de-971e-48f9-b0f5-9e65e1825ed8"},"spec":{"fluentBitConfig":"[Service]\n    Parsers_File    parsers.conf\n[Input]\n    Name    tail\n    Path    /var/log/containers/*.log\n    Exclude_Path    /var/log/containers/utils_default_utils-*.log\n    Refresh_Interval    10\n    Skip_Long_Lines    true\n    DB    /fluent-bit/tail/pos.db\n    DB.Sync    Normal\n    Mem_Buf_Limit    5MB\n    Parser    docker\n    Tag    kube.*\n[Filter]\n    Name    kubernetes\n    Match    kube.*\n    Kube_URL    https://kubernetes.default.svc:443\n    Kube_CA_File    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    Kube_Token_File    /var/run/secrets/kubernetes.io/serviceaccount/token\n    Labels    false\n    Annotations    false\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    lift\n    Nested_under    kubernetes\n    Add_prefix    kubernetes_\n[Filter]\n    Name    modify\n    Match    kube.*\n    Remove    stream\n    Remove    kubernetes_pod_id\n    Remove    kubernetes_host\n    Remove    kubernetes_container_hash\n[Filter]\n    Name    nest\n    Match    kube.*\n    Operation    nest\n    Wildcard    kubernetes_*\n    Nest_under    kubernetes\n    Remove_prefix    kubernetes_\n[Output]\n    Name    kafka\n    Match_Regex    (?:kube|service)\\.(.*)\n    Brokers    my-cluster-kafka-brokers.kafka.svc:9092\n    Topics    fluent-log\n","parsersConfig":""}}
Reconciling FluentBitConfig/fluent/fluent-bit-config: Get Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: Update Secret/fluent/fluent-bit-config done
Reconciling FluentBitConfig/fluent/fluent-bit-config: done
reconciled (ObjectRef { dyntype: (), name: "fluent-bit-config", namespace: Some("fluent"), extra: Extra { resource_version: Some("636"), uid: Some("fc5c00de-971e-48f9-b0f5-9e65e1825ed8") } }, Action { requeue_after: Some(60s) })

